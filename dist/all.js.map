{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;AAMA,QACG,MADH,CACU,UADV,EACsB,CAClB,UADkB,CADtB,EAIG,QAJH,CAIY,aAJZ,EAI2B,kCAJ3B,EAKG,SALH,CAKa,aALb,EAK4B,sBAL5B,EAMG,SANH,CAMa,UANb,EAMyB,mBANzB,EAOG,OAPH,CAOW,cAPX,EAO2B,YAP3B,EAQG,SARH,CAQa,iBARb,EAQgC,gBARhC,EASG,MATH,CASU,iBATV;;AAWA,SAAS,iBAAT,CAA2B,oBAA3B,EAAiD,WAAjD,EAA8D;AAC5D,uBAAqB,WAArB,CAAiC;AAC/B,aAAS,WADsB;AAE/B,cAAU,cAAc;AAFO,GAAjC;AAID;;AAED,SAAS,YAAT,CAAsB,cAAtB,EAAsC,YAAtC,EAAoD;AAClD,SAAO,eAAe,aAAa,QAAb,CAAsB,UAAtB,GAAmC,WAAnC,CAA+C,EAA/C,CAAf,CAAP;AACD;;AAED,SAAS,oBAAT,GAAgC;AAC9B,SAAO;AACL,gBAAY,UAAU,YAAV,EAAwB;AAClC,WAAK,QAAL,GAAgB,YAAhB;AACD,KAHI;AAIL,cAAU;AAJL,GAAP;AAMD;;AAED,SAAS,iBAAT,GAA6B;AAC3B,SAAO;AACL,cAAU,EAAE,UAAU,GAAZ,EADL;AAEL,gBAAY,YAAY;AACtB,WAAK,UAAL,GAAmB,KAAD,IAAW;AAC3B,YAAI,MAAM,OAAN,IAAiB,MAAM,OAAN,KAAkB,EAAvC,EAA2C;AAAE;AAAS;AACtD,aAAK,QAAL,CAAc,IAAd,CAAmB;AACjB,gBAAM,KAAK;AADM,SAAnB;AAGA,aAAK,WAAL,GAAmB,EAAnB;AACD,OAND;AAOD,KAVI;AAWL,cAAU;;;;;;;;;;;;;;;;;AAAA;AAXL,GAAP;AA8BD;;AAED,SAAS,gBAAT,GAA4B;AAC1B,SAAO;AACL,cAAU,GADL;AAEL,WAAO,EAFF;AAGL,sBAAkB,EAAE,SAAS,UAAX,EAHb;AAIL,kBAAc,OAJT;AAKL,gBAAY,MAAM,CAAE,CALf;AAML,UAAM,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,KAAwB;AAC5B,WAAK,CAAL,EAAQ,cAAR;AACD,KARI;AASL,cAAU;;;;AAAA;AATL,GAAP;AAeD","file":"all.js","sourcesContent":["\n/*\n * Flexchat\n * ----------\n * An angular app demonstrating Firebase & Flexbox.\n */\nangular\n  .module('flexchat', [\n    'firebase'\n  ])\n  .constant('FirebaseUrl', 'https://flexchat.firebaseio.com/')\n  .component('flexchatApp', flexchatAppComponent())\n  .component('flexchat', flexchatComponent())\n  .factory('messagesList', MessagesList)\n  .directive('flexchatMessage', MessageDirective)\n  .config(ApplicationConfig);\n\nfunction ApplicationConfig($firebaseRefProvider, FirebaseUrl) {\n  $firebaseRefProvider.registerUrl({\n    default: FirebaseUrl,\n    messages: FirebaseUrl + 'messages'\n  });\n}\n\nfunction MessagesList($firebaseArray, $firebaseRef) {\n  return $firebaseArray($firebaseRef.messages.orderByKey().limitToLast(25));\n}\n\nfunction flexchatAppComponent() {\n  return {\n    controller: function (messagesList) {\n      this.messages = messagesList;\n    },\n    template: '<flexchat messages=\"$ctrl.messages\"></flexchat>'\n  }\n}\n\nfunction flexchatComponent() {\n  return {\n    bindings: { messages: '<' },\n    controller: function () {\n      this.addMessage = (event) => {\n        if (event.keyCode && event.keyCode !== 13) { return; }\n        this.messages.$add({\n          text: this.messageText\n        });\n        this.messageText = '';\n      };\n    },\n    template: `\n  <header>\n    <h3>flex-chat</h3>\n  </header>\n\n  <div class=\"chat-container\">\n    <flexchat-message \n      class=\"chat-section animated fadeInUp\"\n      ng-repeat=\"message in $ctrl.messages\" \n      message=\"message\">\n    </flexchat-message>\n  </div>\n\n  <div class=\"input-bar\">\n    <input type=\"text\" ng-model=\"$ctrl.messageText\" ng-keyup=\"$ctrl.addMessage($event)\" />\n    <button ng-click=\"$ctrl.addMessage($event)\">Send</button>\n  </div>\n`\n  };\n}\n\nfunction MessageDirective() {\n  return {\n    restrict: 'E',\n    scope: {},\n    bindToController: { message: '=message'},\n    controllerAs: '$ctrl',\n    controller: () => {},\n    link: (scope, elem, attrs) => {\n      elem[0].scrollIntoView();\n    },\n    template: `\n  <div class=\"chat-message\">\n    <div>{{ $ctrl.message.text }}</div>\n  </div>\n`\n  }\n}\n"]}